v0.4 (unreleased):

- Added support for Python 2.6.
- Template.has() is now passed 'ignore_empty=False' by default instead of True.
  This fixes a bug when adding parameters to templates with empty fields, and
  is a breaking change if you rely on the default behavior.
- The 'matches' argument of Wikicode's filter methods now accepts a function
  (taking one argument, a Node, and returning a bool) in addition to a regex.
- Re-added 'flat' argument to Wikicode.get_sections().
- Wikicode.get_sections() now returns sections in the correct order.
- Wikicode.matches() now accepts a tuple or list of strings/Wikicode objects
  instead of just a single string or Wikicode.
- Given the frequency of issues with the (admittedly insufficient) tag parser,
  there's a temporary skip_style_tags argument to parse() that ignores '' and
  ''' until these issues are corrected.
- C code cleanup and speed improvements.

v0.3.2 (released September 1, 2013):

- Added support for Python 3.2 (along with current support for 3.3 and 2.7).
- Renamed Template.remove()'s first argument from 'name' to 'param', which now
  accepts Parameter objects in addition to parameter name strings.

v0.3.1 (released August 29, 2013):

- Fixed a parser bug involving URLs nested inside other markup.
- Fixed some typos.

v0.3 (released August 24, 2013):

- Added complete support for HTML Tags, including forms like <ref>foo</ref>,
  <ref name="bar"/>, and wiki-markup tags like bold ('''), italics (''), and
  lists (*, #, ; and :).
- Added support for ExternalLinks (http://example.com/ and
  [http://example.com/ Example]).
- Wikicode's filter methods are now passed 'recursive=True' by default instead
  of False. This is a breaking change if you rely on any filter() methods being
  non-recursive by default.
- Added a matches() method to Wikicode for page/template name comparisons.
- The 'obj' param of Wikicode.insert_before(), insert_after(), replace(), and
  remove() now accepts other Wikicode objects and strings representing parts of
  wikitext, instead of just nodes. These methods also make all possible
  substitutions instead of just one.
- Renamed Template.has_param() to has() for consistency with Template's other
  methods; has_param() is now an alias.
- The C tokenizer extension now works on Python 3 in addition to Python 2.7.
- Various bugfixes, internal changes, and cleanup.

v0.2 (released June 20, 2013):

- The parser now fully supports Python 3 in addition to Python 2.7.
- Added a C tokenizer extension that is significantly faster than its Python
  equivalent. It is enabled by default (if available) and can be toggled by
  setting `mwparserfromhell.parser.use_c` to a boolean value.
- Added a complete set of unit tests covering parsing and wikicode
  manipulation.
- Renamed Wikicode.filter_links() to filter_wikilinks() (applies to ifilter as
  well).
- Added filter methods for Arguments, Comments, Headings, and HTMLEntities.
- Added 'before' param to Template.add(); renamed 'force_nonconformity' to
  'preserve_spacing'.
- Added 'include_lead' param to Wikicode.get_sections().
- Removed 'flat' param from Wikicode.get_sections().
- Removed 'force_no_field' param from Template.remove().
- Added support for Travis CI.
- Added note about Windows build issue in the README.
- The tokenizer will limit itself to a realistic recursion depth to prevent
  errors and unreasonably long parse times.
- Fixed how some nodes' attribute setters handle input.
- Fixed multiple bugs in the tokenizer's handling of invalid markup.
- Fixed bugs in the implementation of SmartList and StringMixIn.
- Fixed some broken example code in the README; other copyedits.
- Other bugfixes and code cleanup.

v0.1.1 (released September 21, 2012):

- Added support for Comments (<!-- foo -->) and Wikilinks ([[foo]]).
- Added corresponding ifilter_links() and filter_links() methods to Wikicode.
- Fixed a bug when parsing incomplete templates.
- Fixed strip_code() to affect the contents of headings.
- Various copyedits in documentation and comments.

v0.1 (released August 23, 2012):

- Initial release.
